// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type AvgStatsResp struct {
	AvgFlightTime  float64 `json:"avgFlightTime"`  // 单位：秒
	AvgBatteryUsed float64 `json:"avgBatteryUsed"` // 单位：百分比
	AvgGS          float64 `json:"avgGS"`
}

type DateCount struct {
	Date  string `json:"date"`
	Count int    `json:"count"`
}

type FlightRecord struct {
	ID          int     `json:"id"`
	UavId       string  `json:"uav_id"`
	StartTime   string  `json:"start_time"`
	EndTime     string  `json:"end_time"`
	StartLat    int64   `json:"start_lat"`
	StartLng    int64   `json:"start_lng"`
	EndLat      int64   `json:"end_lat"`
	EndLng      int64   `json:"end_lng"`
	Distance    float64 `json:"distance"`
	BatteryUsed int     `json:"battery_used"`
	CreatedAt   string  `json:"created_at"`
}

type FlightRecordReq struct {
	FlightCode string `json:"flightCode"`
	StartTime  string `json:"startTime"`
	EndTime    string `json:"endTime"`
}

type FlightRecordsResponse struct {
	Flightrecords []FlightRecord `json:"flightRecords"`
}

type PayloadStats struct {
	Date    string  `json:"date"`
	Payload float64 `json:"payload"`
}

type PayloadStatsResp struct {
	YearStats  []PayloadStats `json:"yearStats"`
	MonthStats []PayloadStats `json:"monthStats"`
	DayStats   []PayloadStats `json:"dayStats"`
}

type RecordsStatsResp struct {
	TotalCount    int     `json:"totalCount"`
	TotalDistance float64 `json:"totalDistance"`
	TotalTime     int64   `json:"totalTime"`
}

type SOCUsage struct {
	Date  string  `json:"date"`
	Usage float64 `json:"usage"`
}

type SOCUsageStatsResp struct {
	YearStats  []SOCUsage `json:"yearStats"`
	MonthStats []SOCUsage `json:"monthStats"`
	DayStats   []SOCUsage `json:"dayStats"`
}

type TimeSeriesStatsResp struct {
	YearStats  []DateCount `json:"yearStats"`
	MonthStats []DateCount `json:"monthStats"`
	DayStats   []DateCount `json:"dayStats"`
}

type TrackPoints struct {
	FlightCode   string `json:"flightCode"`
	FlightStatus string `json:"flightStatus"`
	TimeStamp    string `json:"timeStamp"`
	Longitude    int64  `json:"longitude"`
	Latitude     int64  `json:"latitude"`
	Altitude     int    `json:"altitude"`
	SOC          int    `json:"SOC"`
	GS           int    `json:"GS"`
	WindSpeed    int    `json:"windSpeed"`  // 新增
	WindDirect   int    `json:"windDirect"` // 新增
}

type TrackResponse struct {
	Track []TrackPoints `json:"track"`
}

type UasStatsResp struct {
	Total  int `json:"total"`
	Online int `json:"online"`
}
