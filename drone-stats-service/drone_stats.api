// goctl api go -api drone_stats.api -dir .
type FlightRecordReq {
	FlightCode string `json:"flightCode"`
	startTime  string `json:"startTime"`
	endTime    string `json:"endTime"`
}

type DroneStats {
	FlightCode   string `json:"flightCode"`
	FlightStatus string `json:"flightStatus"`
	TimeStamp    string `json:"timeStamp"`
	Longitude    int64  `json:"longitude"`
	Latitude     int64  `json:"latitude"`
	Altitude     int    `json:"altitude"`
	SOC          int    `json:"SOC"`
}

type DroneStatsResponse {
	records []DroneStats
}

type FlightRecord {
	ID          int     `json:"id"`
	UavId       string  `json:"uav_id"`
	StartTime   string  `json:"start_time"`
	EndTime     string  `json:"end_time"`
	StartLat    int64   `json:"start_lat"`
	StartLng    int64   `json:"start_lng"`
	EndLat      int64   `json:"end_lat"`
	EndLng      int64   `json:"end_lng"`
	Distance    float64 `json:"distance"`
	BatteryUsed int     `json:"battery_used"`
	CreatedAt   string  `json:"created_at"`
}

type FlightRecordsResponse {
	flightrecords []FlightRecord `json:"flightRecords"`
}

type RecordsStatsResp {
	TotalCount    int     `json:"totalCount"`
	TotalDistance float64 `json:"totalDistance"`
	TotalTime     int64   `json:"totalTime"`
}

type UasStatsResp {
	total  int `json:"total"`
	online int `json:"online"`
}

service droneStats {
	@handler GetFlightRecords
	post /api/flight/records (FlightRecordReq) returns (DroneStatsResponse)

	@handler QueryFlightRecords
	post /api/flight/query (FlightRecordReq) returns (FlightRecordsResponse)

	@handler GetUasStats
	get /api/uas/stats returns (UasStatsResp)

	@handler ExportFlightRecords
	post /api/flight/export (FlightRecordReq) returns (FlightRecordsResponse)

	@handler RecordsStats
	post /api/flight/stats returns (RecordsStatsResp)
}

