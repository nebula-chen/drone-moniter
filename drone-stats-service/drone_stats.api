// goctl api go -api drone_stats.api -dir .
type FlightRecordReq {
	FlightCode string `json:"flightCode"`
	startTime  string `json:"startTime"`
	endTime    string `json:"endTime"`
}

type TrackPoints {
	FlightCode   string `json:"flightCode"`
	FlightStatus string `json:"flightStatus"`
	TimeStamp    string `json:"timeStamp"`
	Longitude    int64  `json:"longitude"`
	Latitude     int64  `json:"latitude"`
	Altitude     int    `json:"altitude"`
	SOC          int    `json:"SOC"`
}

type TrackResponse {
	Track []TrackPoints `json:track`
}

type FlightRecord {
	ID          int     `json:"id"`
	UavId       string  `json:"uav_id"`
	StartTime   string  `json:"start_time"`
	EndTime     string  `json:"end_time"`
	StartLat    int64   `json:"start_lat"`
	StartLng    int64   `json:"start_lng"`
	EndLat      int64   `json:"end_lat"`
	EndLng      int64   `json:"end_lng"`
	Distance    float64 `json:"distance"`
	BatteryUsed int     `json:"battery_used"`
	CreatedAt   string  `json:"created_at"`
}

type FlightRecordsResponse {
	flightrecords []FlightRecord `json:"flightRecords"`
}

type RecordsStatsResp {
	TotalCount    int     `json:"totalCount"`
	TotalDistance float64 `json:"totalDistance"`
	TotalTime     int64   `json:"totalTime"`
}

type UasStatsResp {
	total  int `json:"total"`
	online int `json:"online"`
}

type DateCount {
	Date  string `json:"date"`
	Count int    `json:"count"`
}

type TimeSeriesStatsResp {
	YearStats  []DateCount `json:"yearStats"`
	MonthStats []DateCount `json:"monthStats"`
	DayStats   []DateCount `json:"dayStats"`
}

type SOCUsage {
	Date  string  `json:"date"`
	Usage float64 `json:"usage"`
}

type SOCUsageStatsResp {
	YearStats  []SOCUsage `json:"yearStats"`
	MonthStats []SOCUsage `json:"monthStats"`
	DayStats   []SOCUsage `json:"dayStats"`
}

type AvgStatsResp {
	AvgFlightTime  float64 `json:"avgFlightTime"` // 单位：秒
	AvgBatteryUsed float64 `json:"avgBatteryUsed"` // 单位：百分比
	AvgGS          float64 `json:"avgGS"`
}

service droneStats {
	@handler GetFlightRecords
	post /record/get (FlightRecordReq) returns (TrackResponse)

	@handler QueryFlightRecords
	post /record/query (FlightRecordReq) returns (FlightRecordsResponse)

	@handler GetUasStats
	get /record/uas returns (UasStatsResp)

	@handler ExportFlightRecords
	post /record/export (FlightRecordReq) returns (FlightRecordsResponse)

	@handler RecordsStats
	post /record/stats returns (RecordsStatsResp)

	@handler TimeSeriesStats
	get /record/timeSeries returns (TimeSeriesStatsResp)

	@handler SOCUsageStats
	get /record/SOCUsage returns (SOCUsageStatsResp)

	@handler AvgStats
	get /record/avgStats returns (AvgStatsResp)

	@handler RecentTracks
	get /record/recentTracks returns (TrackResponse)
}

